<style>
    .center-cropped {
        object-position: center; /* Center the image within the element */
        object-fit: cover;
        width: 64px;
        height: 64px;
        border-radius: 100px;
        border: solid 1px rgb(94, 94, 94);
    }

    .following {
        width: 90px;
        padding: 8px 16px;
        background-color: black;
        border-radius: 16px;
        font-weight: bold;
        color: white
    }

    .not-following {
        width: 90px;
        padding: 8px 16px;
        background-color: white;
        color: black;
        border-radius: 16px;
        font-weight: bold;
    }
</style>

<div>

    <%- partial('../../partials/navbar.ejs') %>
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

    <%- exposeLocalsToBrowser({keys: ['users']}) %>

    <div id="app" style="padding: 16px">
        <div v-for="u in users" style="background-color: white; margin-bottom: 16px;
        padding: 16px"
            v-bind:key="u.id">

            <div style="display: flex; align-items: center">
                <a :href="'/user/' + u.id">
                    <img class="center-cropped" 
                        :src="u.profileImageUrl ? u.profileImageUrl : '/images/startup.png'">
                </a>

                <div style="flex: 1; margin: 0px 16px">
                    <a :href="'/user/' + u.id"
                        style="text-decoration: none; color: black; font-weight: bold">
                        {{u.fullName}}
                    </a>
                    <div style='margin-top: 4px'>
                        {{u.bio}}
                    </div>
                </div>
    
                <button v-on:click="follow(u)"
                        v-bind:class="u.isFollowing ? 'following' : 'not-following'">
                    {{u.isFollowing ? 'Unfollow' : 'Follow'}}
                </button>
            </div>

            
        </div>
    </div>

    <script>
        const allUsers = window.SAILS_LOCALS.users

        // allUsers.forEach(u => {
        //     u.isFollowing = false
        // })

        const App = new Vue({
            el: "#app",
            data: {
                message: "Hello from Vue!",
                users: allUsers
            },
            methods: {
                follow: async function(user) {
                    // make sure to use a try catch for any errors that can occur on requests
                    try {
                        if (user.isFollowing) {
                            await axios.post('/unfollow/' + user.id)
                        } else {
                            await axios.post('/follow/' + user.id)
                        }

                        const originalId = user.id
                        user.id = "TEMP"
                        user.isFollowing = !user.isFollowing
                        user.id = originalId
                    } catch (err) {
                        console.error(err.toString())
                    }
                    
                }
            }
        })
    </script>

</div>